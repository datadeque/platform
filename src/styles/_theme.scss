$themes: (
  dark: (
    base: #0e0f0f,
    backdrop: #172436,
    landing-gradient:
      radial-gradient(
        hsl(214deg 69% 19%) 0%,
        hsl(214deg 66% 18%) 5%,
        hsl(215deg 64% 17%) 11%,
        hsl(215deg 61% 16%) 17%,
        hsl(216deg 59% 15%) 22%,
        hsl(216deg 56% 14%) 28%,
        hsl(217deg 54% 13%) 34%,
        hsl(217deg 52% 12%) 40%,
        hsl(217deg 49% 11%) 46%,
        hsl(218deg 47% 10%) 53%,
        hsl(218deg 45% 8%) 60%,
        hsl(219deg 43% 7%) 67%,
        hsl(219deg 41% 6%) 77%,
        hsl(220deg 39% 5%) 88%,
        hsl(220deg 38% 3%) 100%
      ),
    background0: #0d0b17,
    background1: #111625,
    text-primary: #fefeff,
    text-muted: #a5a9ae,
    accent-primary: #2c78db,
    accent-secondary: #6c6c70,
    button-text-primary: #fefeff,
    button-selected-primary: #0d5dc5,
    button-selected-secondary: #555558,
    button-new-project: #172436,
    shadow-primary: #0000002c,
  ),
  light: (
    base: #ffffff,
    backdrop: #f1f7fa,
    landing-gradient:
      radial-gradient(
        hsl(195deg 71% 88%) 0%,
        hsl(195deg 70% 88%) 5%,
        hsl(196deg 70% 89%) 11%,
        hsl(196deg 69% 90%) 17%,
        hsl(196deg 68% 90%) 22%,
        hsl(197deg 68% 91%) 28%,
        hsl(197deg 67% 91%) 34%,
        hsl(197deg 66% 92%) 40%,
        hsl(198deg 64% 93%) 46%,
        hsl(198deg 63% 93%) 53%,
        hsl(199deg 61% 94%) 60%,
        hsl(199deg 59% 94%) 67%,
        hsl(199deg 56% 95%) 77%,
        hsl(200deg 52% 96%) 88%,
        hsl(200deg 47% 96%) 100%
      ),
    background0: white,
    background1: #e0e9ee,
    text-primary: #505050,
    text-muted: #7f7f81,
    accent-primary: #57ccf2,
    accent-secondary: #8c8c90,
    button-text-primary: white,
    button-selected-primary: #01b7f3,
    button-selected-secondary: #747477,
    button-new-project: white,
    shadow-primary: #0000002c,
  ),
);

@mixin themed-styles() {
  @each $theme, $map in $themes {
    :global(.theme-#{$theme}) & {
      $theme-map: () !global;
      @each $key, $submap in $map {
        $value: map-get($map, '#{$key}');
        $theme-map: map-merge(
          $theme-map,
          (
            $key: $value,
          )
        ) !global;
      }
      @content;
      $theme-map: null !global;
    }
  }

  @each $theme, $map in $themes {
    .theme-#{$theme} & {
      $theme-map: () !global;
      @each $key, $submap in $map {
        $value: map-get($map, '#{$key}');
        $theme-map: map-merge(
          $theme-map,
          (
            $key: $value,
          )
        ) !global;
      }
      @content;
      $theme-map: null !global;
    }
  }
}

@function themed-colour($key) {
  @return map-get($theme-map, $key);
}
